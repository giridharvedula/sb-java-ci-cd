name: Deploy to ECS

on: workflow_dispatch

env:
  AWS_ACCOUNT_ID: 578133268609
  AWS_ECR: 578133268609.dkr.ecr.us-east-1.amazonaws.com/sb-java-ecr-repo-frontend
  AWS_REGION: us-east-1

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/oidc_role"
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image and tag
        run: |
          docker build -t ${{ env.AWS_ECR }}:latest .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.AWS_ECR }}:latest

      - name: Update ECS Task Definition
        run: |
          NEW_REVISION=$(aws ecs register-task-definition \
          --family sb-java-frontend-task \
          --network-mode awsvpc \
          --requires-compatibilities FARGATE \
          --cpu "256" \
          --memory "512" \
          --container-definitions "$(cat <<'EOF'
              [
                  {
                      "name": "frontend-container",
                      "image": "${{ env.AWS_ECR }}:latest",
                      "memory": 512,
                      "cpu": 256,
                      "essential": true,
                      "portMappings": [
                          {
                              "containerPort": 80,
                              "hostPort": 80
                          }
                      ]
                  }
              ]
          EOF
          )" --query "taskDefinition.taskDefinitionArn" --output text)
          echo "New revision ARN: $NEW_REVISION"

      - name: Update ECS Service
        run: |
          aws ecs update-service \
          --cluster sb-java-app-cluster \
          --service sb-java-frontend-service \
          --task-definition "$NEW_REVISION" \
          --region ${{ env.AWS_REGION }}
